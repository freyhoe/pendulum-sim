var canvas = ctx = !1; let countTime = performance.now(), dots = [], lastElapse = 0, settings = { mass: 100, length: 500, theta: Math.PI / 4 - .05 }, lastTheta = settings.theta; window.requestAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (a) { window.setTimeout(a, 1e3 / 60) }; var pendulum = { mass: settings.mass, length: settings.length, theta: settings.theta, omega: 0, alpha: 0, J: 0 }, setup = function () { pendulum.J = pendulum.mass * pendulum.length * pendulum.length / 500, (ctx = (canvas = document.getElementById("canvas")).getContext("2d")).textAlign = "center", ctx.strokeStyle = "black", ctx.fillStyle = "gold", requestAnimFrame(loop) }; let lastTime = performance.now(); var loop = function () {
    var a = window.innerWidth, e = window.innerHeight; if (ctx.canvas.width = a, ctx.canvas.height = e, pendulum.theta <= lastTheta) { let f = performance.now(); lastElapse = f - countTime, countTime = f } pendulum.theta += .01 * pendulum.omega + .5 * pendulum.alpha * .01 * .01; var g = 4.65 * pendulum.mass * Math.cos(pendulum.theta) * pendulum.length / pendulum.J; pendulum.omega += .5 * (g + pendulum.alpha) * .01, pendulum.alpha = g; var c = a / 2 + pendulum.length * Math.cos(pendulum.theta), d = 50 + pendulum.length * Math.sin(pendulum.theta); for (let b in ctx.clearRect(0, 0, a, e), dots.push({ x: c, y: d }), dots.length > 100 && dots.shift(), dots) {
        let h = dots[b]; ctx.beginPath(), ctx.arc(h.x, h.y, 2, 0, 2 * Math.PI), ctx.strokeStyle = `rgb(
    ${Math.floor(255 - 255 * b / 100)},
    ${Math.floor(255 - 255 * b / 100)},
    ${Math.floor(255 - 255 * b / 100)})`, ctx.fillStyle = "rgba(0, 0, 0, 0)", ctx.stroke(), ctx.fill()
    } ctx.strokeStyle = "black", ctx.beginPath(), ctx.moveTo(a / 2, 50), ctx.lineTo(c, d), ctx.stroke(), ctx.closePath(), ctx.fillStyle = "#AFBFC0", ctx.beginPath(), ctx.arc(c, d, 30, 0, 2 * Math.PI, !1), ctx.fill(), ctx.closePath(), ctx.fillStyle = "#AFBFC0", ctx.beginPath(), ctx.arc(a / 2, 50, 80, 0, 2 * Math.PI, !1), ctx.fill(), ctx.closePath(), ctx.textAlign = "center", ctx.font = "20px serif"; let i = performance.now() - countTime; ctx.fillStyle = "gold", ctx.fillText(`${Math.round(lastElapse / 10) / 100}`, a / 2, 20), ctx.fillStyle = "black", ctx.fillText(`${Math.round(i / 100) / 10}`, a / 2, 50), ctx.fillText("secs elapsed", a / 2, 80), requestAnimFrame(loop)
}; setup(); var FizzyText = function () { this.angle = 30, this.mass = 100, this.length = 400 }, gui = new dat.GUI, text = new FizzyText, slider1 = gui.add(text, "angle", 0, 90), slider2 = gui.add(text, "length", 100, 500), slider3 = gui.add(text, "mass", 1, 1e3), obj = { set: function () { dots = [], lastTheta = settings.theta, pendulum = { mass: settings.mass, length: settings.length, theta: settings.theta, omega: 0, alpha: 0, J: 0 }, pendulum.J = pendulum.mass * pendulum.length * pendulum.length / 500 } }; gui.add(obj, "set"); var resetSliders = function (b) { for (var a = 0; a < gui.__controllers.length; a++)!gui.__controllers.property == b && gui.__controllers[a].setValue(0) }; slider1.onChange(function (a) { settings.theta = a / 180 * Math.PI, resetSliders("angle") }), slider2.onChange(function (a) { settings.length = a, resetSliders("length") }), slider3.onChange(a => { settings.mass = a, resetSliders("mass") })